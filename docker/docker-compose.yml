services:
    postgres:
        image: postgres:17-alpine
        container_name: postgress
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
#        ports:
#            - "5432:5432"
        volumes:
            - ../postgres_db/dump.sql:/docker-entrypoint-initdb.d/init.sql
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 2s
            timeout: 5s
            retries: 5

#    pgadmin:
#        image: dpage/pgadmin4
#        container_name: pgadmin
#        ports:
#            - "8888:80"
#        environment:
#          PGADMIN_DEFAULT_EMAIL:
#          PGADMIN_DEFAULT_PASSWORD: admin

    qdrant:
        build:
            context: ..
            dockerfile: /docker/qdrant_db/Dockerfile
        container_name: qdrant
        ports:
            - "6333:6333"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
            interval: 2s
            timeout: 2s
            retries: 20

    data_loader:
        build:
            context: ..
            dockerfile: docker/data_loader/Dockerfile
        container_name: data_loader
        env_file: "../.env"
        depends_on:
            qdrant:
                condition: service_healthy

    django:
        build:
            context: ..
            dockerfile: docker/db_api/Dockerfile
        container_name: django_api
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - ../db_api:/app
        ports:
            - "8000:8000"
        environment:
            POSTGRES_DB: restaurant_db
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_HOST: postgress
            POSTGRES_PORT: 5432

    chatbot:
        build:
            context: ..
            dockerfile: docker/chatbot/Dockerfile
        container_name: chatbot
        restart: on-failure
        env_file: "../.env"
        ports:
            - "80:7860"
        depends_on:
            data_loader:
                condition: service_completed_successfully
            django:
                condition: service_started
